@model Channel365.Data.Entities.ApplicationUser
@{
    ViewData["Title"] = "Your Playlists";
    var statusMsg = (String)ViewData["PlaylistStatus"];
}
<div class="page-heading mb-4">
    <h1>
        <a href="/Identity/Account/Manage" class="text-info" title="Back to My Account">
            <small>
                <svg class="bi bi-arrow-return-left text-info" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M5.854 5.646a.5.5 0 0 1 0 .708L3.207 9l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0z" />
                    <path fill-rule="evenodd" d="M13.5 2.5a.5.5 0 0 1 .5.5v4a2.5 2.5 0 0 1-2.5 2.5H3a.5.5 0 0 1 0-1h8.5A1.5 1.5 0 0 0 13 7V3a.5.5 0 0 1 .5-.5z" />
                </svg>
            </small>
        </a>
        Your playlists
    </h1>

    @if (!string.IsNullOrEmpty(statusMsg))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Status: </strong> @statusMsg
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
</div>
<div class="btn-group dropright mb-4">
    <button type="button" class="btn btn-sm btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        New Playlist
    </button>
    <div class="dropdown">
        <form id="create-window" class="dropdown-menu p-4" method="post">
            <h4 class="dropdown-header">Create new playlist</h4>
            <input id="usr-id" type="hidden" value="@Model.Id" />
            <hr />
            <div class="form-group">
                <label for="newPlaylistName">Name</label>
                <input type="text" class="form-control" id="newPlaylistName" name="name" placeholder="Playlists name" required>
            </div>

            <div class="form-group">
                <label for="newPlaylistDescription">Description</label>
                <textarea class="form-control" id="newPlaylistDescription" name="desc" rows="3"></textarea>
            </div>

            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="visibility" id="visibilityPublic" value="2000" checked>
                <label class="form-check-label" for="visibilityPublic">Public</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="visibility" id="visibilityPrivate" value="1000">
                <label class="form-check-label" for="visibilityPrivate">Private</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="visibility" id="visibilityUnlisted" value="3000">
                <label class="form-check-label" for="visibilityUnlisted">Unlisted</label>
            </div>

            <button id="create-btn" type="submit" class="btn btn-outline-info btn-block mt-5">Create</button>
        </form>
    </div>
</div>


    <h2 id="empty-list">
        @(Model.UserPlaylist.Count == 0? "Playlist will be displayed below when you create some." : "" )
    </h2>

    <div id="playlist-appendage" class="row">
        @foreach (var playlist in Model.UserPlaylist)
        {
            <div class="col-md-12 col-lg-6 card-crown">
                <div class="card mb-3" style="max-width: 565px;">
                    <div class="row no-gutters">

                        @* VISIBILITY ICON *@
                        @if (playlist.PlaylistVisibility == Channel365.Models.PlaylistVisibility.Public)
                        {
                            <div class="pl-vis" title="Public">
                                <svg title="Public" class="bi bi-eye-fill" width="1.3em" height="1.3em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M10.5 8a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z" />
                                    <path fill-rule="evenodd" d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 100-7 3.5 3.5 0 000 7z" clip-rule="evenodd" />
                                </svg>
                            </div>
                        }
                        else if (playlist.PlaylistVisibility == Channel365.Models.PlaylistVisibility.Private)
                        {
                            <div class="pl-vis" title="Private">
                                <svg title="Private" class="bi bi-eye-slash-fill" width="1.3em" height="1.3em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M10.79 12.912l-1.614-1.615a3.5 3.5 0 01-4.474-4.474l-2.06-2.06C.938 6.278 0 8 0 8s3 5.5 8 5.5a7.029 7.029 0 002.79-.588zM5.21 3.088A7.028 7.028 0 018 2.5c5 0 8 5.5 8 5.5s-.939 1.721-2.641 3.238l-2.062-2.062a3.5 3.5 0 00-4.474-4.474L5.21 3.089z" />
                                    <path d="M5.525 7.646a2.5 2.5 0 002.829 2.829l-2.83-2.829zm4.95.708l-2.829-2.83a2.5 2.5 0 012.829 2.829z" />
                                    <path fill-rule="evenodd" d="M13.646 14.354l-12-12 .708-.708 12 12-.708.708z" clip-rule="evenodd" />
                                </svg>
                            </div>
                        }
                        else
                        {
                            <div class="pl-vis" title="Unlisted">
                                <svg class="bi bi-eye-slash" width="1.3em" height="1.3em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M13.359 11.238C15.06 9.72 16 8 16 8s-3-5.5-8-5.5a7.028 7.028 0 00-2.79.588l.77.771A5.944 5.944 0 018 3.5c2.12 0 3.879 1.168 5.168 2.457A13.134 13.134 0 0114.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755-.165.165-.337.328-.517.486l.708.709z" />
                                    <path d="M11.297 9.176a3.5 3.5 0 00-4.474-4.474l.823.823a2.5 2.5 0 012.829 2.829l.822.822zm-2.943 1.299l.822.822a3.5 3.5 0 01-4.474-4.474l.823.823a2.5 2.5 0 002.829 2.829z" />
                                    <path d="M3.35 5.47c-.18.16-.353.322-.518.487A13.134 13.134 0 001.172 8l.195.288c.335.48.83 1.12 1.465 1.755C4.121 11.332 5.881 12.5 8 12.5c.716 0 1.39-.133 2.02-.36l.77.772A7.029 7.029 0 018 13.5C3 13.5 0 8 0 8s.939-1.721 2.641-3.238l.708.709z" />
                                    <path fill-rule="evenodd" d="M13.646 14.354l-12-12 .708-.708 12 12-.708.708z" clip-rule="evenodd" />
                                </svg>
                            </div>
                        }

                        @* EDIT BUTTON *@
                        <div class="pl-edit start-edt" title="Edit playlist">
                            <svg class="bi bi-pencil" width="1.5em" height="1.3em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" d="M11.293 1.293a1 1 0 011.414 0l2 2a1 1 0 010 1.414l-9 9a1 1 0 01-.39.242l-3 1a1 1 0 01-1.266-1.265l1-3a1 1 0 01.242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z" clip-rule="evenodd" />
                                <path fill-rule="evenodd" d="M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 00.5.5H4v.5a.5.5 0 00.5.5H5v.5a.5.5 0 00.5.5H6v-1.5a.5.5 0 00-.5-.5H5v-.5a.5.5 0 00-.5-.5H3z" clip-rule="evenodd" />
                            </svg>
                        </div>
                        <div class="pl-edit finish-edt" title="Save changes">
                            <svg class="bi bi-check-circle" width="1.5em" height="1.3em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" d="M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z" clip-rule="evenodd" />
                                <path fill-rule="evenodd" d="M8 2.5A5.5 5.5 0 1013.5 8a.5.5 0 011 0 6.5 6.5 0 11-3.25-5.63.5.5 0 11-.5.865A5.472 5.472 0 008 2.5z" clip-rule="evenodd" />
                            </svg>
                        </div>

                        @* DELETE BUTTON w/ DropDown *@
                        <div class="del-playlist btn-group dropleft" title="Delete playlist">
                            <button class="close dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <svg class="bi bi-trash2-fill" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M2.037 3.225l1.684 10.104A2 2 0 005.694 15h4.612a2 2 0 001.973-1.671l1.684-10.104C13.627 4.224 11.085 5 8 5c-3.086 0-5.627-.776-5.963-1.775z" />
                                    <path fill-rule="evenodd" d="M12.9 3c-.18-.14-.497-.307-.974-.466C10.967 2.214 9.58 2 8 2s-2.968.215-3.926.534c-.477.16-.795.327-.975.466.18.14.498.307.975.466C5.032 3.786 6.42 4 8 4s2.967-.215 3.926-.534c.477-.16.795-.327.975-.466zM8 5c3.314 0 6-.895 6-2s-2.686-2-6-2-6 .895-6 2 2.686 2 6 2z" clip-rule="evenodd" />
                                </svg>
                            </button>

                            <div class="dropdown-menu playlist-menu">
                                <form class="del-playlist-form">
                                    @* asp-controller="Playlist" asp-action="Delete" asp-route-id="@playlist.PlaylistId" *@
                                    <input class="playlist-id-storage" type="hidden" value="@playlist.PlaylistId" />
                                    <h5>Delete playlist</h5>
                                    <hr />
                                    <h6>Are you sure?</h6>
                                    <button class="btn btn-sm btn-outline-info btn-block del-btn" type="submit">DELETE</button>
                                </form>
                            </div>
                        </div>

                        <div class="d-none d-md-block col-md-4 card-img">
                            <a class="playlist-link" asp-controller="Playlist" asp-action="Playlist" asp-route-id="@playlist.PlaylistId">
                                <img src="@Url.Content("~/pic/placeholder/playlist_cover.png")" class="card-img" alt="Playlist image">
                            </a>
                        </div>
                        <div class="col-md-6 cb-container">
                            <a class="playlist-link" asp-controller="Playlist" asp-action="Playlist" asp-route-id="@playlist.PlaylistId">
                                <div class="card-body">

                                    <div class="edt-details">
                                        <input type="text" class="body-text pl-title" value="@playlist.PlaylistName" placeholder="@playlist.PlaylistName" readonly />
                                        <input type="text" class="body-text pl-desc" value="@playlist.PlaylistDesc" placeholder="@playlist.PlaylistDesc" readonly />
                                    </div>

                                    <p class="card-text">
                                        <small class="text-muted">
                                            @playlist.VideosInPlaylists.Count() Videos  &bull;
                                            <span class="pl-vis-display">@playlist.PlaylistVisibility</span>
                                        </small>
                                    </p>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>


    <style>
    .edt-details {
        position: relative;
    }

    .body-text {
        border: none;
        outline: none;
        cursor: pointer;
        color: dimgray;
        background-color: transparent;
        min-width: 100%;
    }

        .body-text::placeholder {
            color: #75757566 !important;
        }

    .pl-title {
        font-size: 1.25rem;
        font-weight: 500;
        line-height: 1.2;
        margin-bottom: .75rem;
    }

    .pl-desc {
        max-height: 55px;
        font-weight: 400;
        overflow: hidden;
        margin-bottom: 0 !important;
    }

    .card-crown {
        user-select: none;
    }

    .appended {
        transition: all .15s linear;
        transform: scale(0);
    }

    @@keyframes card {
            0% {
                box-shadow: 0px 1px 25px 0px rgba(240,240,240,0.3)
            }
            50% {
                box-shadow: 0px 1px 25px 3px rgba(240,240,240,0.3)
            }
            100% {
                box-shadow: 0px 1px 25px 0px rgba(240,240,240,0.3)
            }
    }

    .card {
        color: black;
        transition: all .15s linear;
        max-height: 143px;
            
    }

        .card:hover {
            /*box-shadow: 0px 1px 25px 1px rgba(240,240,240,0.3);*/
            cursor: pointer;
            animation: card 1s linear infinite;
        }



    .pl-edit {
        position: absolute;
        top: 2px;
        right: 30px;
        z-index: 1;
        color: dimgrey;
    }

        .pl-edit:hover {
            color: #28245a;
        }

    .start-edt {
        display: block;
    }

    .finish-edt {
        display: none;
    }

        .finish-edt:hover {
            color: green;
        }

    .pl-vis {
        position: absolute;
        bottom: 0;
        right: 10px;
        width: 15px;
        color: dimgray;
    }

        .pl-vis:hover {
            color: #28245a;
        }

    .card-text {
        max-height: 55px;
        overflow: hidden;
        margin-bottom: 0 !important;
    }

    .dropleft .dropdown-toggle::before {
        content: none;
    }

    .playlist-menu {
        box-shadow: 5px 5px 5px 0px rgba(0,0,0,0.5);
        top: -20px !important;
        cursor: default;
    }

    .del-playlist {
        position: absolute;
        top: 0;
        right: 5px;
        z-index: 1;
    }

        .del-playlist button {
            outline: none;
        }

    .del-playlist-form {
        text-align: center;
        color: #7a2776;
    }

    .del-btn {
        margin-bottom: 10px;
        border-left: none;
        border-right: none;
        border-radius: 2px;
    }

    .playlist-link {
        color: dimgrey;
    }

    .card:hover .playlist-link {
        color: #28245a;
    }

    .card:hover .body-text {
        color: #28245a;
    }

    #create-window {
        width: 20rem;
        transform: initial !important;
    }

    .dropdown-header {
        padding: 0;
        color: #117a8b;
        text-align: center;
        font-size: 1.5rem;
    }

        .dropdown-header + hr {
            margin-top: 0;
        }

    #newPlaylistDescription {
        min-height: 50px;
        max-height: 200px;
    }
    </style>

@section Scripts {
    <script>
        $(function () {
            let rvt = $('input[name="__RequestVerificationToken"]').val();

            //! Create new playlist
            $('#create-btn').click(function (e) {
                e.preventDefault();

                let user = $('#usr-id').val();
                let title = $('#newPlaylistName').val();
                let desc = $('#newPlaylistDescription').val();
                let vis = $('input[name="visibility"]:checked').val();

                //! Div to append created content to
                let appendage = $('#playlist-appendage');

                if (title !== null) {

                    $.ajax({
                        type: 'POST',
                        url: '../../Playlist/Create',
                        data: {
                            __RequestVerificationToken: rvt,
                            id: user,
                            name: title,
                            desc: desc,
                            visibility: vis
                        },

                        success: function (response) {
                            $('.dropdown-toggle').dropdown('hide')

                            let playlist = response;

                            appendContent(playlist, appendage);

                            setTimeout(() => {

                                $('.appended').css('transform', 'scale(1, 1)');

                                if ($('#empty-list').is(":visible")) {

                                    $('#empty-list').slideUp(300, function(){
                                        $(this).hide();
                                    });
                                }

                                setTimeout(() => {
                                    $('.appended').removeClass('appended');
                                }, 250);
                            }, 250);
                        },
                        error: function (response) {
                            console.log("error: " + response);
                        }
                    });
                }

            });

            //! Edit playlist
            $('div').on('click', '.start-edt', function (e) {
                e.stopPropagation();

                // Set elements
                let startEdtBtn = $(this);
                let finishEdt = $(this).siblings('.finish-edt');
                let crownDivEl = $(this).closest('.card-crown');
                let cardDivEl = $(this).closest('.card');
                let cardBodyContainer = startEdtBtn.siblings('.cb-container');
                let edtDivEl = cardBodyContainer.find('.edt-details');
                let inputEls = cardBodyContainer.find('.body-text');
                let inputElTitle = cardBodyContainer.find('.pl-title');
                let inputElDesc = cardBodyContainer.find('.pl-desc');
                let visibilityEl = $(this).siblings('.pl-vis');
                let visValueEl = cardBodyContainer.find('.pl-vis-display');
                let anchorEl = cardBodyContainer.find('.playlist-link');

                // Store previous values
                let prevTitle = inputElTitle.val();
                let prevDesc = inputElDesc.val();
                let prevVis = visValueEl.text();
                let prevVisIcon = visibilityEl.html();

                // Store default in newVis
                // prevents controller from throwing.
                switch (prevVis) {
                    case 'Public':
                        newVis = '2000'
                        visibilityEl.prop('title', 'Change to Private');
                        break;
                    case 'Private':
                        newVis = '1000'
                        visibilityEl.prop('title', 'Change to Unlisted');
                        break;
                    case 'Unlisted':
                        newVis = '3000'
                        visibilityEl.prop('title', 'Change to Public');
                        break;
                }

                changeState();

                visibilityEl.click(function () {

                    switch (visValueEl.text()) {

                        case 'Public':
                            newVis = '1000';
                            visValueEl.html('Private');
                            visibilityEl.prop('title', 'Change to Unlisted');
                            visibilityEl.html(privateIcon);
                            break;

                        case 'Private':
                            newVis = '3000';
                            visValueEl.html('Unlisted');
                            visibilityEl.prop('title', 'Change to Public');
                            visibilityEl.html(unlistedIcon);
                            break;

                        case 'Unlisted':
                            newVis = '2000';
                            visValueEl.html('Public');
                            visibilityEl.prop('title', 'Change to Private');
                            visibilityEl.html(publicIcon);
                            break;
                    }

                });

                // Save changes if valid, and return to normal
                finishEdt.one('click', function () {

                    let id = $(this).siblings('.del-playlist').find('.playlist-id-storage').val()

                    let newTitle = inputElTitle.val();
                    let newDesc = inputElDesc.val();

                    if (newTitle === '') {
                        newTitle = prevTitle;
                    }

                    $.ajax({
                        type: 'POST',
                        url: '../../Playlist/Edit',
                        data: {
                            __RequestVerificationToken: rvt,
                            id: id,
                            newTitle: newTitle,
                            newDesc: newDesc,
                            newVis: newVis
                        },

                        dataType: 'json',

                        success: function (response) {

                            switch (response) {

                                case '204':
                                    inputElTitle.val(newTitle);
                                    inputElTitle.prop('placeholder', newTitle);
                                    inputElDesc.val(newDesc);
                                    inputElDesc.attr('placeholder', newDesc);
                                    visibilityEl.prop('title', visValueEl.text());
                                    break;

                                case '404':
                                    console.log("Error: Server responded with 404 - Resource not found.");
                                    break;

                                case '409':
                                    console.log("Concurrency Exception occured.")
                                    break;

                            }
                        },
                        error: function (response) {
                            console.log('Error: ' + response);
                        }
                    });

                    restoreState();

                    finishEdt.toggle(function () {
                        startEdtBtn.toggle();
                    });

                    // Remove MouseUp and Click event
                    $(document).unbind('mouseup');
                    visibilityEl.unbind('click');

                });


                $(document).mouseup(function (e) {

                    if (!crownDivEl.is(e.target) && crownDivEl.has(e.target).length === 0
                        && finishEdt.is(':visible')) {

                        // User clicked outside of Playlist Card, restore changes
                        restoreState();

                        inputElTitle.val(prevTitle);
                        inputElDesc.val(prevDesc);
                        visValueEl.html(prevVis);
                        visibilityEl.prop('title', prevVis)
                        visibilityEl.html(prevVisIcon);

                        finishEdt.toggle(function () {
                            startEdtBtn.toggle();
                        });

                        // Remove MouseUp and Click event
                        $(document).unbind('mouseup');
                        visibilityEl.unbind('click');
                        finishEdt.unbind('click');
                    }
                });


                function changeState() {
                    startEdtBtn.toggle(function () {
                        finishEdt.toggle();
                    });

                    cardDivEl.css('transform', 'scale(1.1, 1.1)')
                    cardBodyContainer.find('.card-body').css('cursor', 'default');

                    // Disable Anchor-tags
                    anchorEl.click(function (e) {
                        e.preventDefault();
                    });



                    // Remove readonly prop
                    inputElTitle.prop('readonly', false);
                    inputElDesc.prop('readonly', false);
                    inputEls.css('cursor', 'auto');

                    // Set focus to Title automatically
                    //  and set field value to empty
                    inputElTitle.focus();
                    inputElTitle.val('');

                    // If Title-input is empty when focusout
                    //  restore previous title
                    inputElTitle.focusin(function () {
                        inputElTitle.val('');
                    });
                    inputElTitle.focusout(function () {
                        if (inputElTitle.val() == '') {
                            //inputElTitle.val(prevTitle);
                        }
                    });

                    // Same as above but for Description-input
                    inputElDesc.focusin(function () {
                        inputElDesc.val('');
                    });
                    inputElDesc.focusout(function () {
                        if (inputElDesc.val() == '') {
                            //inputElDesc.val(prevDesc);
                        }
                    });
                }
                function restoreState() {
                    cardDivEl.css('transform', 'scale(1, 1)');
                    inputElTitle.prop('readonly', true);
                    inputElDesc.prop('readonly', true);
                    anchorEl.unbind('click');
                    cardBodyContainer.find('.card-body').css('cursor', 'pointer');
                }

            });

            //! Delete playlyst
            $('div').on('click', '.del-btn', function (e) {
                e.stopPropagation();
                e.preventDefault();

                let id = $(this).siblings('.playlist-id-storage').val();
                let cardEl = $(this).closest('.card');

                $.ajax({
                    type: 'POST',
                    url: '../../Playlist/Delete',
                    data: {
                        __RequestVerificationToken: rvt,
                        id: id
                    },

                    dataType: 'json',

                    success: function (response) {

                        cardEl.css('transform', 'scale(0, 0)');

                        setTimeout(() => {
                            cardEl.closest('.card-crown').remove();
                        }, 225);

                        $.getJSON('../../Playlist/GetPlaylistAmount', function (response) {
                            let amount = response;

                            if (amount === '0') {
                                $('#empty-list').hide();
                                $('#empty-list').text('Playlist will be displayed below when you create some.');
                                $('#empty-list').slideDown(300);
                            }
                        });

                    },
                    error: function (response) {
                        console.log("Error: " + response)
                    }
                });

            });

            //! Visibility Icons
            var publicIcon = `<svg title="Public" class="bi bi-eye-fill" width="1.3em" height="1.3em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M10.5 8a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z" />
                                        <path fill-rule="evenodd" d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 100-7 3.5 3.5 0 000 7z" clip-rule="evenodd" />
                                    </svg>`;
            var privateIcon = `<svg title="Private" class="bi bi-eye-slash-fill" width="1.3em" height="1.3em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M10.79 12.912l-1.614-1.615a3.5 3.5 0 01-4.474-4.474l-2.06-2.06C.938 6.278 0 8 0 8s3 5.5 8 5.5a7.029 7.029 0 002.79-.588zM5.21 3.088A7.028 7.028 0 018 2.5c5 0 8 5.5 8 5.5s-.939 1.721-2.641 3.238l-2.062-2.062a3.5 3.5 0 00-4.474-4.474L5.21 3.089z" />
                                        <path d="M5.525 7.646a2.5 2.5 0 002.829 2.829l-2.83-2.829zm4.95.708l-2.829-2.83a2.5 2.5 0 012.829 2.829z" />
                                        <path fill-rule="evenodd" d="M13.646 14.354l-12-12 .708-.708 12 12-.708.708z" clip-rule="evenodd" />
                                    </svg>`;
            var unlistedIcon = `<svg class="bi bi-eye-slash" width="1.3em" height="1.3em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M13.359 11.238C15.06 9.72 16 8 16 8s-3-5.5-8-5.5a7.028 7.028 0 00-2.79.588l.77.771A5.944 5.944 0 018 3.5c2.12 0 3.879 1.168 5.168 2.457A13.134 13.134 0 0114.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755-.165.165-.337.328-.517.486l.708.709z" />
                                        <path d="M11.297 9.176a3.5 3.5 0 00-4.474-4.474l.823.823a2.5 2.5 0 012.829 2.829l.822.822zm-2.943 1.299l.822.822a3.5 3.5 0 01-4.474-4.474l.823.823a2.5 2.5 0 002.829 2.829z" />
                                        <path d="M3.35 5.47c-.18.16-.353.322-.518.487A13.134 13.134 0 001.172 8l.195.288c.335.48.83 1.12 1.465 1.755C4.121 11.332 5.881 12.5 8 12.5c.716 0 1.39-.133 2.02-.36l.77.772A7.029 7.029 0 018 13.5C3 13.5 0 8 0 8s.939-1.721 2.641-3.238l.708.709z" />
                                        <path fill-rule="evenodd" d="M13.646 14.354l-12-12 .708-.708 12 12-.708.708z" clip-rule="evenodd" />
                                    </svg>`;

            //! Helper method for appending created playlist
            function appendContent(playlist, appendTo) {

                var content = `<div class="col-md-12 col-lg-6 card-crown appended">
                    <div class="card mb-3" style="max-width: 565px;">
                        <div class="row no-gutters">

                            `+ ((playlist.playlistVisibility == '2000') ? `
                                <div class="pl-vis" title="Public">
                                    <svg title="Public" class="bi bi-eye-fill" width="1.3em" height="1.3em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M10.5 8a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z" />
                                        <path fill-rule="evenodd" d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 100-7 3.5 3.5 0 000 7z" clip-rule="evenodd" />
                                    </svg>
                                </div>` : (playlist.playlistVisibility == '1000') ?
                            `
                                <div class="pl-vis" title="Private">
                                    <svg title="Private" class="bi bi-eye-slash-fill" width="1.3em" height="1.3em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M10.79 12.912l-1.614-1.615a3.5 3.5 0 01-4.474-4.474l-2.06-2.06C.938 6.278 0 8 0 8s3 5.5 8 5.5a7.029 7.029 0 002.79-.588zM5.21 3.088A7.028 7.028 0 018 2.5c5 0 8 5.5 8 5.5s-.939 1.721-2.641 3.238l-2.062-2.062a3.5 3.5 0 00-4.474-4.474L5.21 3.089z" />
                                        <path d="M5.525 7.646a2.5 2.5 0 002.829 2.829l-2.83-2.829zm4.95.708l-2.829-2.83a2.5 2.5 0 012.829 2.829z" />
                                        <path fill-rule="evenodd" d="M13.646 14.354l-12-12 .708-.708 12 12-.708.708z" clip-rule="evenodd" />
                                    </svg>
                                </div>` :
                            `
                                <div class="pl-vis" title="Unlisted">
                                    <svg class="bi bi-eye-slash" width="1.3em" height="1.3em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M13.359 11.238C15.06 9.72 16 8 16 8s-3-5.5-8-5.5a7.028 7.028 0 00-2.79.588l.77.771A5.944 5.944 0 018 3.5c2.12 0 3.879 1.168 5.168 2.457A13.134 13.134 0 0114.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755-.165.165-.337.328-.517.486l.708.709z" />
                                        <path d="M11.297 9.176a3.5 3.5 0 00-4.474-4.474l.823.823a2.5 2.5 0 012.829 2.829l.822.822zm-2.943 1.299l.822.822a3.5 3.5 0 01-4.474-4.474l.823.823a2.5 2.5 0 002.829 2.829z" />
                                        <path d="M3.35 5.47c-.18.16-.353.322-.518.487A13.134 13.134 0 001.172 8l.195.288c.335.48.83 1.12 1.465 1.755C4.121 11.332 5.881 12.5 8 12.5c.716 0 1.39-.133 2.02-.36l.77.772A7.029 7.029 0 018 13.5C3 13.5 0 8 0 8s.939-1.721 2.641-3.238l.708.709z" />
                                        <path fill-rule="evenodd" d="M13.646 14.354l-12-12 .708-.708 12 12-.708.708z" clip-rule="evenodd" />
                                    </svg>
                                </div>`
                            ) + `

                            <div class="pl-edit start-edt" title="Edit playlist">
                                <svg class="bi bi-pencil" width="1.5em" height="1.3em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M11.293 1.293a1 1 0 011.414 0l2 2a1 1 0 010 1.414l-9 9a1 1 0 01-.39.242l-3 1a1 1 0 01-1.266-1.265l1-3a1 1 0 01.242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z" clip-rule="evenodd" />
                                    <path fill-rule="evenodd" d="M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 00.5.5H4v.5a.5.5 0 00.5.5H5v.5a.5.5 0 00.5.5H6v-1.5a.5.5 0 00-.5-.5H5v-.5a.5.5 0 00-.5-.5H3z" clip-rule="evenodd" />
                                </svg>
                            </div>
                            <div class="pl-edit finish-edt" title="Save changes">
                                <svg class="bi bi-check-circle" width="1.5em" height="1.3em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M15.354 2.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3-3a.5.5 0 11.708-.708L8 9.293l6.646-6.647a.5.5 0 01.708 0z" clip-rule="evenodd" />
                                    <path fill-rule="evenodd" d="M8 2.5A5.5 5.5 0 1013.5 8a.5.5 0 011 0 6.5 6.5 0 11-3.25-5.63.5.5 0 11-.5.865A5.472 5.472 0 008 2.5z" clip-rule="evenodd" />
                                </svg>
                            </div>

                            <div class="del-playlist btn-group dropleft" title="Delete playlist">
                                <button class="close dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <svg class="bi bi-trash2-fill" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M2.037 3.225l1.684 10.104A2 2 0 005.694 15h4.612a2 2 0 001.973-1.671l1.684-10.104C13.627 4.224 11.085 5 8 5c-3.086 0-5.627-.776-5.963-1.775z" />
                                        <path fill-rule="evenodd" d="M12.9 3c-.18-.14-.497-.307-.974-.466C10.967 2.214 9.58 2 8 2s-2.968.215-3.926.534c-.477.16-.795.327-.975.466.18.14.498.307.975.466C5.032 3.786 6.42 4 8 4s2.967-.215 3.926-.534c.477-.16.795-.327.975-.466zM8 5c3.314 0 6-.895 6-2s-2.686-2-6-2-6 .895-6 2 2.686 2 6 2z" clip-rule="evenodd" />
                                    </svg>
                                </button>

                                <div class="dropdown-menu playlist-menu">
                                    <form class="del-playlist-form">
                                        <input class="playlist-id-storage" type="hidden" value="`+ playlist.playlistId + `" />
                                        <h5>Delete playlist</h5>
                                        <hr />
                                        <h6>Are you sure?</h6>
                                        <button class="btn btn-sm btn-outline-info btn-block del-btn" type="submit">DELETE</button>
                                    </form>
                                </div>
                            </div>

                            <div class="d-none d-md-block col-md-4 card-img">
                                <a class="playlist-link" href="/Playlist/Playlist/`+ playlist.playlistId + `">
                                    <img src="/pic/placeholder/playlist_cover.png" class="card-img" alt="Playlist image">
                                </a>
                            </div>
                            <div class="col-md-6 cb-container">
                                <a class="playlist-link" href="/Playlist/Playlist/`+ playlist.playlistId + `">
                                    <div class="card-body">

                                        <div class="edt-details">
                                            <input type="text" class="body-text pl-title" value="`+ playlist.playlistName + `" placeholder="` + playlist.playlistName + `" readonly />
                                            `+ (playlist.playlistDesc === null ? '' : `<input type="text" class="body-text pl-desc" value="` + playlist.playlistDesc + `" placeholder="` + playlist.playlistDesc + `" readonly />`) + `

                                        </div>

                                        <p class="card-text">
                                            <small class="text-muted">
                                                `+ playlist.videosInPlaylists.length + ` Videos  &bull;
                                                <span class="pl-vis-display">`
                                                    + ((playlist.playlistVisibility === 1000) ? 'Private' : (playlist.playlistVisibility === 2000) ? 'Public' : 'Unlisted') +
                                                `</span>
                                            </small>
                                        </p>
                                    </div>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>`;

                appendTo.append(content);
            }

            //! Callback when DropDown is finished being hidden
            $('.dropright').on('hidden.bs.dropdown', function () {

                //! Clean up dropdowns input-fields values.
                $('#newPlaylistName').val('');
                $('#newPlaylistDescription').val('');
            });

        });
    </script>
}
