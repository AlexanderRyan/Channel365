@model Channel365.Models.VideoModel
@{
    ViewData["Title"] = "Upload";
}
@using (Html.BeginForm("Index", "Upload", FormMethod.Post, new { enctype = "multipart/form-data" })) {
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.VideoTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VideoTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VideoTitle, "", new { @class = "text-danger" })
            </div>
        </div><!-- /.form-group -->
        <div class="form-group">
            @Html.LabelFor(model => model.VideoDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VideoDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VideoDescription, "", new { @class = "text-danger" })
            </div>
        </div><!-- /.form-group -->
        <div class="form-group">
            @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.File, new { type = "file", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div><!-- /.form-group -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
